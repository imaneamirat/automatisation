---
  - name: Include OS-specific variables.
    include_vars: "{{ ansible_os_family }}.yml"

  - name: Install MySQL Server
    apt:
      name: default-mysql-server
      state: present
    notify:
      - restart-mysql

  - name: Install PyMySQL
    apt:
      name: python3-pymysql
      state: present
    notify:
      - restart-mysql

   #we could move this to a handler
  - name: ensure MySQL always starts
    service:
      name: "{{ mysql_service_name }}"
      state: restarted
      enabled: yes


  - name: check if root my.conf exists
    stat:
      path: "/root/.my.cnf"
    register: my_cnf_status

  # This command will exit non-zero when the root password was set previously
  - name: Check if root password is unset
    shell: >
      mysql -u root
      -p'{{ mysql_root_password }}'
      -h localhost
      -S {{ mysql_socket }}
      -e "quit"
    changed_when: false
    ignore_errors: true
    become: true
    become_user: '{{ wordpress_user }}'
    register: root_pwd_check
    tags: mysql

  # Repeat runs with the same password can continue idempotently, otherwise fail.
  - name: Check if the specified root password is already set
    shell: >
      mysqladmin -u root -p{{ mysql_root_password }} status
    changed_when: false
    no_log: true
    when: root_pwd_check.rc != 0
    tags: mysql

  - name: Check for previously set unix_socket in plugin column
    command: >
      mysql -N -s -S {{ mysql_socket }} -u root -e
      "SELECT plugin from mysql.user WHERE user = 'root'"
    register: plugin_root_result
    changed_when: plugin_root_result.stdout is search('unix_socket')
    when: root_pwd_check.rc == 0
    tags: mysql

  - name: Set MySQL root password for the first time (root@localhost)
    mysql_user:
      name: root
      password: "{{ mysql_root_password }}"
      host: localhost
      login_unix_socket: "{{ mysql_socket }}"
      state: present
    when: root_pwd_check.rc != 0
    tags: mysql

  - name: Remove unix_socket plugin if previously set
    command: >
      mysql -S {{ mysql_socket }} -u root -e
      "UPDATE mysql.user SET plugin = '' WHERE user = 'root'; FLUSH PRIVILEGES;"
    when:
      - root_pwd_check.rc == 0
      - plugin_root_result.stdout is search('unix_socket')
    tags: mysql

  - name: Set MySQL root password for 127.0.0.1, ::1, FQDN
    mysql_user:
      name: root
      password: "{{ mysql_root_password }}"
      host: "{{ item }}"
      login_user: root
      login_password: "{{ mysql_root_password }}"
      login_unix_socket: "{{ mysql_socket }}"
      state: present
    with_items:
      - ::1
      - 127.0.0.1
      - "{{ ansible_fqdn }}"
    when: root_pwd_check.rc != 0
    tags: mysql

  - name: Place ~/.my.cnf
    template:
     src: .my.cnf.j2
     dest: "/root/.my.cnf"

  - name: create WordPress Database
    mysql_db:
      name: "{{wordpress_database_name}}"
      state: present
      login_unix_socket: /run/mysqld/mysqld.sock

  - name: Grant all previliges
    mysql_user:
      name: "{{mysql_wordpress_username}}"
      password: "{{ mysql_wordpress_password }}"
      priv: '*.*:ALL'
      host: '%'
      state: present
      login_unix_socket: /run/mysqld/mysqld.sock